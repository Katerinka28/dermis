// Algorythm from https://www.colorbox.io/
@function tone-range-value($value, $base, $current)
  $shift: $value - nth($base, 1)
  $base-diff: nth($base, 2) - nth($base, 1)
  $current-diff: nth($current, 2) - nth($current, 1)

  $result: nth($current, 1) + $shift / $base-diff * $current-diff

  @return min(max($result, nth($current, 1)), nth($current, 2))

@function tone-color-from-range($mark, $specs: ())
  $position: $mark / 100
  $specs: map-merge($TONE_DEFAULT_SPECS, $specs)
  $saturation-rate: map-get($specs, saturation-rate)

  $hue-range: map-get($specs, hue-range)
  $saturation-range: map-get($specs, saturation-range)
  $brightness-range: map-get($specs, brightness-range)

  $position-hue: call(map-get($specs, hue-curve), $position)
  $position-saturation: call(map-get($specs, saturation-curve), $position)
  $position-brightness: call(map-get($specs, brightness-curve), 1 - $position)

  $hue-current: tone-range-value($position-hue, 0 1, $hue-range)
  $saturation-current: tone-range-value($position-saturation, 0 1, $saturation-range) * $saturation-rate / 100
  $brightness-current: tone-range-value($position-brightness, 0 1, $brightness-range)

  @return hsl(hsv-to-hsl($hue-current, $saturation-current, $brightness-current)...)

@function tone-color-palette-range($marks, $specs: ())
  $result: ()

  @each $mark in $marks
    $result: map-merge($result, ($mark: tone-color-from-range($mark, $specs)))

  @return $result
